<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjm.auth.mapper.EmpRoleMapper" >
  <resultMap id="BaseResultMap" type="com.zjm.auth.bean.EmpRole" >
    <id column="erid" property="erid" jdbcType="INTEGER" />
    <result column="emp_fk" property="empFk" jdbcType="INTEGER" />
    <result column="role_fk" property="roleFk" jdbcType="INTEGER" />
    <result column="erdis" property="erdis" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    erid, emp_fk, role_fk, erdis
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zjm.auth.bean.EmpRoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from emp_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from emp_role
    where erid = #{erid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from emp_role
    where erid = #{erid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zjm.auth.bean.EmpRoleExample" >
    delete from emp_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zjm.auth.bean.EmpRole" >
    insert into emp_role (erid, emp_fk, role_fk, 
      erdis)
    values (#{erid,jdbcType=INTEGER}, #{empFk,jdbcType=INTEGER}, #{roleFk,jdbcType=INTEGER}, 
      #{erdis,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zjm.auth.bean.EmpRole" >
    insert into emp_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="erid != null" >
        erid,
      </if>
      <if test="empFk != null" >
        emp_fk,
      </if>
      <if test="roleFk != null" >
        role_fk,
      </if>
      <if test="erdis != null" >
        erdis,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="erid != null" >
        #{erid,jdbcType=INTEGER},
      </if>
      <if test="empFk != null" >
        #{empFk,jdbcType=INTEGER},
      </if>
      <if test="roleFk != null" >
        #{roleFk,jdbcType=INTEGER},
      </if>
      <if test="erdis != null" >
        #{erdis,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zjm.auth.bean.EmpRoleExample" resultType="java.lang.Integer" >
    select count(*) from emp_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update emp_role
    <set >
      <if test="record.erid != null" >
        erid = #{record.erid,jdbcType=INTEGER},
      </if>
      <if test="record.empFk != null" >
        emp_fk = #{record.empFk,jdbcType=INTEGER},
      </if>
      <if test="record.roleFk != null" >
        role_fk = #{record.roleFk,jdbcType=INTEGER},
      </if>
      <if test="record.erdis != null" >
        erdis = #{record.erdis,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update emp_role
    set erid = #{record.erid,jdbcType=INTEGER},
      emp_fk = #{record.empFk,jdbcType=INTEGER},
      role_fk = #{record.roleFk,jdbcType=INTEGER},
      erdis = #{record.erdis,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zjm.auth.bean.EmpRole" >
    update emp_role
    <set >
      <if test="empFk != null" >
        emp_fk = #{empFk,jdbcType=INTEGER},
      </if>
      <if test="roleFk != null" >
        role_fk = #{roleFk,jdbcType=INTEGER},
      </if>
      <if test="erdis != null" >
        erdis = #{erdis,jdbcType=VARCHAR},
      </if>
    </set>
    where erid = #{erid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zjm.auth.bean.EmpRole" >
    update emp_role
    set emp_fk = #{empFk,jdbcType=INTEGER},
      role_fk = #{roleFk,jdbcType=INTEGER},
      erdis = #{erdis,jdbcType=VARCHAR}
    where erid = #{erid,jdbcType=INTEGER}
  </update>
</mapper>